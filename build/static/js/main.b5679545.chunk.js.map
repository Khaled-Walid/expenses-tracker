{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","collapsed","setCollapsed","enteredExpenseData","id","Math","random","onAddExpense","ExpensesFilter","selected","onDropdownChange","Card","classes","children","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDatePoints","expenses","getMonth","Expenses","selectedYear","setSelectedYear","filteredList","filter","toString","console","log","DUMMY_EXPENSES","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5679545.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  function titleHandler(event) {\r\n    setEnteredTitle(event.target.value);\r\n  }\r\n  function amountHandler(event) {\r\n    setEnteredAmount(event.target.value);\r\n  }\r\n  function dateHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nfunction NewExpense(props) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  function saveExpenseDataHandler(enteredExpenseData) {\n    const expenseData = { ...enteredExpenseData, id: Math.random() };\n    props.onAddExpense(expenseData);\n    setCollapsed(true);\n  }\n\n  function collapseHandler() {\n    setCollapsed(true);\n  }\n  function uncollapseHandler() {\n    setCollapsed(false);\n  }\n\n  return (\n    <div className=\"new-expense\">\n      {collapsed && (\n        <button onClick={uncollapseHandler}>Add New Expense</button>\n      )}\n      {!collapsed && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={collapseHandler}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nfunction ExpensesFilter(props) {\n  function dropdownHandler(event) {\n    props.onDropdownChange(event.target.value);\n  }\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nfunction ExpensesList(props) {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses to show!</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nfunction ChartBar(props) {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n}\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nfunction Chart(props) {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nfunction ExpensesChart(props) {\n  const chartDatePoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDatePoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDatePoints}></Chart>;\n}\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\n  function dropdownYearHandler(year) {\n    setSelectedYear(year);\n    console.log(year);\n  }\n  const filteredList = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={selectedYear}\n        onDropdownChange={dropdownYearHandler}\n      ></ExpensesFilter>\n      <ExpensesChart expenses={filteredList} />\n      <ExpensesList items={filteredList} />\n    </Card>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  function addExpenseHandler(expense) {\n    setExpenses((prevExpense) => [expense, ...prevExpense]);\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}